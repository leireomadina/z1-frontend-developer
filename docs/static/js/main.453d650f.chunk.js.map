{"version":3,"sources":["components/Header.tsx","images/ID-empty-card.svg","components/IdCard.tsx","components/pages/Scanner.tsx","services/api.tsx","components/pages/Home.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","IdCard","props","imageSrc","src","emptyIDCard","alt","title","to","type","onClick","openScanner","videoConstraints","facingMode","Scanner","imgSrc","setImgSrc","webcamRef","useRef","capture","useCallback","current","getScreenshot","handleScanner","useEffect","setTimeout","audio","screenshotFormat","ref","requestOptions","method","body","JSON","stringify","App","useState","setIsValid","fetch","then","resp","json","data","summary","outcome","catch","console","error","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAUeA,EARA,WACb,OACE,wBAAQC,UAAU,cAAlB,SACE,oBAAIA,UAAU,qBAAd,2BCLS,G,MAAA,IAA0B,2C,OCkD1BC,EAxCA,SAACC,GACd,IAIOC,EAAYD,EAAZC,SAKP,OACE,sBAAMH,UAAU,YAAhB,SACE,0BAASA,UAAU,UAAnB,UACE,oBAAIA,UAAU,iBAAd,0BACA,mBAAGA,UAAU,gBAAb,0FAIA,sBAAKA,UAAU,yBAAf,UACE,qBACCI,IAAKD,GAAYE,EAChBC,IAAI,gBACJC,MAAM,gBACNP,UAAWG,EAAW,WAAa,mBAErC,cAAC,IAAD,CAAMK,GAAG,WAAT,SACE,wBACEC,KAAK,SACLC,QAASR,EAAMS,YACfX,UAAWG,EAAW,SAAW,eAHnC,qC,iBC/BNS,G,MAAmB,CACvBC,WAAY,SAsDCC,EA7CC,SAACZ,GAAyB,IAChCa,EAAsBb,EAAtBa,OAAQC,EAAcd,EAAdc,UACVC,EAAYC,iBAAY,MAExBC,EAAUC,uBAAY,WAAO,IAAD,EAC1BjB,EAAQ,UAAGc,EAAUI,eAAb,aAAG,EAAmBC,gBACpCpB,EAAMqB,cAAcpB,KACnB,CAACc,EAAWD,IAQf,OANAQ,qBAAU,WACRC,YAAW,WACTN,MACC,OACF,IAGD,mCACE,+BACE,0BAASnB,UAAU,UAAnB,UACE,oBAAIA,UAAU,iBAAd,0BACA,mBAAGA,UAAU,gBAAb,yFAICe,GAAU,qBAAKX,IAAKW,EAAQT,IAAI,kBAAkBC,MAAM,oBACzD,qBAAKP,UAAU,2BAAf,SACE,cAAC,IAAD,CACE0B,OAAO,EACPd,iBAAkBA,EAClBe,iBAAiB,aACjB3B,UAAU,iBACV4B,IAAKX,MAGT,cAAC,IAAD,CAAMT,GAAG,IAAT,SACE,wBAAQC,KAAK,SAAST,UAAU,eAAhC,8BCzCN6B,EAA0B,CAC9BC,OAAQ,OACRC,KATgBC,KAAKC,UAAU,CAAC,QAAU,CAAC,QAAU,O,OC0CxCC,G,MApCH,WAAM,MAEYC,mBAAiB,MAF7B,mBAETpB,EAFS,KAEDC,EAFC,OAGcmB,oBAAkB,GAHhC,mBAGAC,GAHA,WAKVzB,EAAca,qBAAU,WDEvBa,MAfQ,gDAeQR,GACpBS,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GACL,OAAOA,EAAKC,QAAQC,WCHnBL,MAAK,SAACG,GACQ,aAATA,EACFL,GAAW,GACO,mBAATK,GACTL,GAAW,MAGdQ,MAAMC,QAAQC,SAChB,IAEGvB,EAAgB,SAACpB,GACrBa,EAAUb,IAGZ,OACE,qBAAKH,UAAU,OAAf,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,IAAlB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAQrC,YAAaA,EAAaY,cAAeA,EAAepB,SAAUY,OAE5E,cAAC,IAAD,UACGA,EAAS,cAAC,IAAD,CAAUP,GAAG,MAAQ,cAAC,EAAD,CAASe,cAAeA,EAAeR,OAAQA,EAAQC,UAAWA,aCvB5FiC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.453d650f.chunk.js","sourcesContent":["import \"../stylesheets/Header.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"home-header\">\r\n      <h1 className=\"home-header__title\">BankClient</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/ID-empty-card.a826b8dc.svg\";","import \"../stylesheets/IdCard.scss\";\r\nimport emptyIDCard from \"../images/ID-empty-card.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface IdCardProps {\r\n  openScanner: any;\r\n  handleScanner: any,\r\n  imageSrc: string\r\n}\r\n\r\nconst IdCard = (props: IdCardProps) => {\r\n  const openScanner = () => {\r\n    props.openScanner();\r\n  };\r\n\r\n  const {imageSrc} = props;\r\n  const handleScanner = (imageSrc: string)=> {\r\n    props.handleScanner();\r\n  }\r\n\r\n  return (\r\n    <main className=\"home-main\">\r\n      <section className=\"id-card\">\r\n        <h2 className=\"id-card__title\">Scan your ID</h2>\r\n        <p className=\"id-card__text\">\r\n          Take a picture. It may take some time to validate your personal\r\n          information.\r\n        </p>\r\n        <div className=\"id-card__img-container\">\r\n          <img\r\n           src={imageSrc || emptyIDCard}\r\n            alt=\"Empty ID card\"\r\n            title=\"Empty ID card\"\r\n            className={imageSrc ? \"accepted\" : \"id-card__image\"}\r\n          />\r\n          <Link to=\"/scanner\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={props.openScanner}\r\n              className={imageSrc ? \"hidden\" : \"id-card__btn\"}\r\n            >\r\n              Take picture\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IdCard;\r\n","import { Link } from \"react-router-dom\";\r\nimport Webcam from \"react-webcam\";\r\nimport React, { useCallback, useRef, useEffect } from \"react\";\r\nimport \"../../stylesheets/Scanner.scss\";\r\n\r\nconst videoConstraints = {\r\n  facingMode: \"user\",\r\n};\r\n\r\ninterface ScannerProps {\r\n  imgSrc: string;\r\n  setImgSrc: any;\r\n  handleScanner: any;\r\n}\r\n\r\nconst Scanner = (props: ScannerProps) => {\r\n  const { imgSrc, setImgSrc } = props;\r\n  const webcamRef = useRef<any>(null);\r\n\r\n  const capture = useCallback(() => {\r\n    const imageSrc = webcamRef.current?.getScreenshot();\r\n    props.handleScanner(imageSrc);\r\n  }, [webcamRef, setImgSrc]);\r\n\r\n  useEffect((): any => {\r\n    setTimeout(() => {\r\n      capture();\r\n    }, 2000);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        <section className=\"scanner\">\r\n          <h1 className=\"scanner__title\">Take picture</h1>\r\n          <p className=\"scanner__text\">\r\n            Fit your ID card inside the frame. The picture will be taken\r\n            automatically.\r\n          </p>\r\n          {imgSrc && <img src={imgSrc} alt=\"User cam result\" title=\"User cam result\"/>}\r\n          <div className=\"scanner__video-container\">\r\n            <Webcam\r\n              audio={false}\r\n              videoConstraints={videoConstraints}\r\n              screenshotFormat=\"image/jpeg\"\r\n              className=\"scanner__video\"\r\n              ref={webcamRef}\r\n            />\r\n          </div>\r\n          <Link to=\"/\">\r\n            <button type=\"button\" className=\"scanner__btn\">\r\n              Cancel\r\n            </button>\r\n          </Link>\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scanner;\r\n","const ENDPOINT = \"https://front-exercise.z1.digital/evaluations\";\r\n\r\nlet raw: string = JSON.stringify({\"summary\":{\"outcome\":\"\"}});\r\n\r\ninterface Request {\r\n  method: string,\r\n  body: string,\r\n}\r\n\r\nconst requestOptions: Request = {\r\n  method: \"POST\",\r\n  body: raw,\r\n};\r\n\r\nconst getDataFromApi = (): Promise<string> => {\r\n  return fetch(ENDPOINT, requestOptions)\r\n    .then((resp) => resp.json())\r\n    .then((data) => {\r\n      return data.summary.outcome;\r\n    });\r\n};\r\n\r\nexport { getDataFromApi };\r\n","import React, { useEffect, useState } from \"react\";\nimport Header from \"../Header\";\nimport IdCard from \"../IdCard\";\nimport Scanner from \"./Scanner\";\nimport { getDataFromApi } from \"../../services/api\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport \"../../stylesheets/Home.scss\";\n\nconst App = () => {\n  // states\n  const [imgSrc, setImgSrc] = useState<string>(null);\n  const [isValid, setIsValid] = useState<boolean>(false);\n\n  const openScanner = useEffect(() => {\n    getDataFromApi()\n      .then((data) => {\n        if (data === \"Approved\") {\n          setIsValid(true);\n        } else if (data === \"Too Much Glare\") {\n          setIsValid(false);\n        }\n      })\n      .catch(console.error);\n  }, []);\n  \n  const handleScanner = (imageSrc: string) => {\n    setImgSrc(imageSrc);\n  };\n\n  return (\n    <div className=\"home\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Header />\n          <IdCard openScanner={openScanner} handleScanner={handleScanner} imageSrc={imgSrc}/>\n        </Route>\n        <Route >\n          {imgSrc ? <Redirect to=\"/\"/> : <Scanner handleScanner={handleScanner} imgSrc={imgSrc} setImgSrc={setImgSrc} />}    \n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./stylesheets/index.scss\";\nimport Home from \"./components/pages/Home\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Home />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}